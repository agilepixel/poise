/**
  *   #GRID
  */

.o-layout__item {
  padding-left: space(site, grid);
  flex-grow: 1;
}

.o-layout {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  margin: 0 0 0 space(negative, grid);

  &--flush {
    margin: 0;

    & > .o-layout__item {
      padding-left: 0;
    }
  }
}

// Alignement of items. Use with .o-grid
@each $position, $value in $gridPosition {
  .o-layout-#{$position} {
    justify-content: $value;
  }
}

@each $breakpoint, $value in $gridBreakpoints {
  @include mq($until: #{$value}) {
    @each $position, $value in $gridPosition {
      .o-layout-#{$position}#{$breakpoint-separator}#{$breakpoint} {
        justify-content: $value;
      }
    }
  }
}

// Different column sizes
@each $size in $columnSizes {
  $roundsize: floor($size);

  .o-layout__item-#{$roundsize} {
    flex-basis: $size * 1%;
    max-width: $size * 1%;
  }
}

@each $breakpoint, $value in $gridBreakpoints {
  @include mq($until: #{$value}) {
    @each $size in $columnSizes {
      $roundsize: floor($size);

      .o-layout__item-#{$roundsize}#{$breakpoint-separator}#{$breakpoint} {
        flex-basis: $size * 1%;
        max-width: $size * 1%;
      }
    }
  }
}

// Align item to the top, center, or bottom
@each $position, $value in $gridPosition {
  .o-layout__item-#{$position} {
    align-self: $value;
  }
}

@each $breakpoint, $value in $gridBreakpoints {
  @include mq($until: #{$value}) {
    @each $position, $value in $gridPosition {
      .o-layout__item-#{$position}#{$breakpoint-separator}#{$breakpoint} {
        align-self: $value;
      }
    }
  }
}
